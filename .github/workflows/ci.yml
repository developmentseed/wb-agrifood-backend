name: Deployment
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
    tags:
      - '**'

permissions:
  id-token: write
  contents: read

# Avoid running multiple jobs for the same branch concurrently
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
    - name: Install pre-commit
      run: pip install pre-commit
    - name: Run pre-commit
      run: pre-commit run --all-files

  deploy-dev:
    needs: lint
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: development
    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18
    - name: Install AWS CDK
      run: npm install -g aws-cdk@2.X
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ vars.OIDC_DEPLOYMENT_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}
    - name: 'Create env file'
      run: |
        touch .env
        echo STAGE=dev >> .env
        echo OWNER= ${{ github.actor }} >> .env
        echo OPENAI_ASSISTANT_NAME=wb-agrifood-datalab >> .env
        echo OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} >> .env
        echo OPENAI_EMBEDDING_MODEL="text-embedding-3-small" >> .env
        echo LANCEDB_DATA_PATH="app_data/lancedb" >> .env
        echo FORCE_CREATE=True >> .env
        echo FRONTEND_DOMAIN="" >> .env
        cat .env
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
    - name: Install the project dependencies
      run: poetry install --no-root
    - name: Update the OpenAI Assistant
      run: poetry run python src/utils/update_openai_assistant.py
    - name: Deploy
      run: poetry run cdk deploy --require-approval never
    - name: Update the vector database
      run: AWS_REGION=us-east-1 poetry run python src/utils/load_vector_database.py

  deploy-staging:
    needs: lint
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: staging
    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18
    - name: Install AWS CDK
      run: npm install -g aws-cdk@2.X
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ vars.OIDC_DEPLOYMENT_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}
    - name: 'Create env file'
      run: |
        touch .env
        echo STAGE=staging >> .env
        echo OWNER= ${{ github.actor }} >> .env
        echo OPENAI_ASSISTANT_NAME=wb-agrifood-datalab >> .env
        echo OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} >> .env
        echo OPENAI_EMBEDDING_MODEL="text-embedding-3-small" >> .env
        echo LANCEDB_DATA_PATH="app_data/lancedb" >> .env
        echo FORCE_RECREATE=True >> .env
        echo FRONTEND_DOMAIN="" >> .env
        cat .env
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
    - name: Install the project dependencies
      run: poetry install --no-root
    - name: Update the OpenAI Assistant
      run: poetry run python src/utils/update_openai_assistant.py
    - name: Deploy
      run: poetry run cdk deploy --require-approval never
    - name: Update the vector database
      run: AWS_REGION=us-east-1 poetry run python src/utils/load_vector_database.py

  deploy-prod:
    needs: lint
    if:  startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18
    - name: Install AWS CDK
      run: npm install -g aws-cdk@2.X
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ vars.OIDC_DEPLOYMENT_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}
    - name: 'Create env file'
      run: |
        touch .env
        echo STAGE=prod >> .env
        echo OWNER= ${{ github.actor }} >> .env
        echo OPENAI_ASSISTANT_NAME=wb-agrifood-datalab >> .env
        echo OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} >> .env
        echo OPENAI_EMBEDDING_MODEL="text-embedding-3-small" >> .env
        echo LANCEDB_DATA_PATH="app_data/lancedb" >> .env
        echo FORCE_RECREATE=True >> .env
        echo FRONTEND_DOMAIN="" >> .env
        cat .env
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
    - name: Install the project dependencies
      run: poetry install --no-root
    - name: Update the OpenAI Assistant
      run: poetry run python src/utils/update_openai_assistant.py
    - name: Deploy
      run: poetry run cdk deploy --require-approval never
    - name: Update the vector database
      run: AWS_REGION=us-east-1 poetry run python src/utils/load_vector_database.py
